<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         metadata-complete="true" version="2.5">

     <context-param>
        <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
        <param-value>server</param-value>
    </context-param>

    <!-- The project stage is configured using JNDI -->
    <!--<context-param>-->
        <!--<param-name>javax.faces.PROJECT_STAGE</param-name>-->
        <!--<param-value>Development</param-value>-->
    <!--</context-param>-->

    <context-param>
        <param-name>javax.faces.DEFAULT_SUFFIX</param-name>
        <param-value>.xhtml</param-value>
    </context-param>

    <context-param>
        <param-name>facelets.SKIP_COMMENTS</param-name>
        <param-value>true</param-value>
    </context-param>

    <context-param>
        <param-name>javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL</param-name>
        <param-value>true</param-value>
    </context-param>

    <context-param>
        <param-name>javax.faces.FACELETS_VIEW_MAPPINGS</param-name>
        <param-value>*.xhtml;*.jspx;*.jsff</param-value>
    </context-param>

    <context-param>
        <param-name>javax.faces.FACELETS_LIBRARIES</param-name>
        <param-value>
            /WEB-INF/editor.taglib.xml
        </param-value>
    </context-param>


    <!-- MyFaces -->
    <context-param>
        <param-name>org.apache.myfaces.annotation.SCAN_PACKAGES</param-name>
        <param-value>uk.ac.ebi.intact.editor</param-value>
    </context-param>

    <context-param>
        <description>
            If true, a javascript function will be rendered that is able
            to restore the former vertical scroll on every request.
            Convenient feature if you have pages with long lists and you
            do not want the browser page to always jump to the top if
            you trigger a link or button action that stays on the same
            page. Default: "false"
        </description>
        <param-name>org.apache.myfaces.AUTO_SCROLL</param-name>
        <param-value>true</param-value>
    </context-param>

    <context-param>
        <description>
            Validate managed beans, navigation rules and ensure that
            forms are not nested.
        </description>
        <param-name>org.apache.myfaces.VALIDATE</param-name>
        <param-value>true</param-value>
    </context-param>

    <!-- Indicate the encryption algorithm used for encrypt the view state. -->
    <context-param>
        <param-name>org.apache.myfaces.ALGORITHM</param-name>
        <!-- See http://java.sun.com/j2se/1.4.2/docs/guide/security/jce/JCERefGuide.html for details -->
        <param-value>AES</param-value>
    </context-param>

    <!-- Defines the default mode and padding used for the encryption algorithm -->
    <context-param>
        <param-name>org.apache.myfaces.ALGORITHM.PARAMETERS</param-name>
        <param-value>CBC/PKCS5Padding</param-value>
    </context-param>

    <!-- Defines the initialization vector (Base64 encoded) used for the
         encryption algorithm. Note its usage depends on the algorithm config used,
         that means it must be defined if CBC mode is used and could not if ECB mode is used -->
    <context-param>
        <param-name>org.apache.myfaces.ALGORITHM.IV</param-name>
        <param-value>NzY1NDMyMTA3NjU0MzIxMA==</param-value>
    </context-param>

    <!-- Indicate the algorithm used to calculate the Message Authentication Code that is added to the view state. -->
    <context-param>
        <param-name>org.apache.myfaces.MAC_ALGORITHM</param-name>
        <param-value>HmacSHA1</param-value>
     </context-param>

    <context-param>
        <description>Defines the secret (Base64 encoded) used to initialize the secret key
            for encryption algorithm. See MyFaces wiki/web site documentation
            for instructions on how to configure an application for
            different encryption strengths.
        </description>
        <param-name>org.apache.myfaces.SECRET</param-name>
        <param-value>OTM2NzM2MDY4YWx3OTNoag==</param-value>
    </context-param>

    <context-param>
        <description>Define the initialization code that are used to initialize the secret key used
         on the Message Authentication Code algorithm
        </description>
        <param-name>org.apache.myfaces.MAC_SECRET</param-name>
        <param-value>YWJjZDEyMzQ=</param-value>
    </context-param>

    <!-- MyFaces Ext-scripting -->
    <!--<context-param>-->
        <!--<description>-->
            <!--Enables our scripting engine support plugins-->
        <!--</description>-->
        <!--<param-name>org.apache.myfaces.FACES_INIT_PLUGINS</param-name>-->
        <!--<param-value>org.apache.myfaces.extensions.scripting.servlet.StartupServletContextPluginChainLoader</param-value>-->
    <!--</context-param>-->
    <!--<context-param>-->
        <!--<description>Additional comma separated loader paths to allow direct editing on the sources directory instead-->
            <!--of the deployment dir-->
        <!--</description>-->
        <!--<param-name>org.apache.myfaces.extensions.scripting.java.LOADER_PATHS</param-name>-->
        <!--<param-value>-->
            <!--d:/projects/intact-current/service/editor/src/main/java-->
        <!--</param-value>-->
    <!--</context-param>-->
    <!--<context-param>-->
        <!--<description>a comma separated whitelist of root packages which are compiled those and nothing else-->
            <!--will be compiled during all compile stages, all other files stay permanently as they are-->
        <!--</description>-->
        <!--<param-name>org.apache.myfaces.extensions.scripting.PGK_WHITELIST</param-name>-->
        <!--<param-value>uk.ac.ebi.intact.editor.component</param-value>-->
    <!--</context-param>-->

    <!-- MyFaces orchestra params -->
    <context-param>
        <description>
            Controls whether two threads are prevented from accessing the same ConversationContext concurrently, or not.
            This is generally a bad idea as it can lead to ugly race conditions, so it is TRUE by default.

            It is possible for multiple requests associated with the same http session to be received concurrently. By
            default, a servlet engine simply processes all requests concurrently in different threads. However that can
            cause all sorts of unexpected problems with objects in scopes that are visible to both threads
            (session-scoped and conversation-scoped objects).

            When enabled, this option will block the thread for any request which will access the same Orchestra
            ConversationContext as a thread that is already running, and release it only when the earlier request has
            completed. This protects all orchestra conversation-scoped objects from concurrent access, but does not
            protect any session-scoped objects.

            When using Orchestra, it is recommended that session-scoped objects are avoided conversation-scoped beans
            used instead. If there is no session-scoped data in use by an application then it is safe to allow
            concurrent requests to the same http session. If you do wish to protect normal session-scoped objects as
            well, then the standard solution is to write a filter that uses standard java synchronisation on a
            session-scoped object, taking the lock on request entry and releasing it on request exit.

            Note that the expression "serialize requests" as used here means requests are processed serially, ie one
            after the other rather than concurrently. This has nothing to do with java.io.Serializable.
        </description>
        <param-name>org.apache.myfaces.orchestra.CoreConfig:SERIALIZE_REQUESTS</param-name>
        <param-value>true</param-value>
    </context-param>



    <!-- Primefaces params -->
    <context-param>
        <param-name>primefaces.THEME</param-name>
        <param-value>none</param-value>
    </context-param>


    <listener>
        <listener-class>uk.ac.ebi.intact.editor.security.AppSessionListener</listener-class> 
    </listener>

    <!-- Spring resources -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath*:/META-INF/*.spring.xml,
            classpath*:/META-INF/jobs/*.spring.xml,
            classpath:/META-INF/security/security.spring.xml,
            classpath:/META-INF/intact-editor.spring.xml
        </param-value>
    </context-param>

    <!-- Spring Framework -->
    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>
    <listener>
		<listener-class>
			org.springframework.web.context.request.RequestContextListener
		</listener-class>
	</listener>
    <listener>
      <listener-class>org.springframework.security.ui.session.HttpSessionEventPublisher</listener-class>
    </listener>

    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>

    <!-- Spring security -->
    <filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>REQUEST</dispatcher>
	</filter-mapping>

    <!-- PretyFaces -->
    <filter>
        <filter-name>Pretty Filter</filter-name>
        <filter-class>com.ocpsoft.pretty.PrettyFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>Pretty Filter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>

    <!-- Orchestra -->
    <listener>
        <listener-class>org.apache.myfaces.orchestra.conversation.servlet.ConversationManagerSessionListener
        </listener-class>
    </listener>

    <!-- Apache CXF -->
    <servlet>
		<servlet-name>CXFServlet</servlet-name>
		<servlet-class>
			org.apache.cxf.transport.servlet.CXFServlet
		</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>CXFServlet</servlet-name>
		<url-pattern>/service/*</url-pattern>
	</servlet-mapping>

    <!-- JSF -->

    <servlet>
        <servlet-name>Faces Servlet</servlet-name>
        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.jsf</url-pattern>
    </servlet-mapping>

    <!-- Proxy Servlet -->
    <servlet>
        <servlet-name>proxy</servlet-name>
        <servlet-class>uk.ac.ebi.intact.editor.servlet.Proxy</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>proxy</servlet-name>
        <url-pattern>/proxy</url-pattern>
    </servlet-mapping>

    <!-- Primefaces fileupload filter -->
    <filter>
		<filter-name>PrimeFaces FileUpload Filter</filter-name>
		<filter-class>org.primefaces.webapp.filter.FileUploadFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>PrimeFaces FileUpload Filter</filter-name>
		<servlet-name>Faces Servlet</servlet-name>
	</filter-mapping>

    <!-- Orchestra Filter -->
    <filter>
        <filter-name>orchestraFilter</filter-name>
        <filter-class>org.apache.myfaces.orchestra.conversation.jsf.filter.OrchestraServletFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>orchestraFilter</filter-name>
        <servlet-name>Faces Servlet</servlet-name>
    </filter-mapping>

    <!--<servlet>-->
        <!--<servlet-name>Comet Servlet</servlet-name>-->
        <!--<servlet-class>org.primefaces.comet.PrimeFacesCometServlet</servlet-class>-->
        <!--<load-on-startup>0</load-on-startup>-->
    <!--</servlet>-->
    <!--<servlet-mapping>-->
        <!--<servlet-name>Comet Servlet</servlet-name>-->
        <!--<url-pattern>/primefaces_comet/*</url-pattern>-->
    <!--</servlet-mapping>-->

     <!--MyFaces Ext-Scripting filter -->
    <!--<filter>-->
       <!--<filter-name>scriptingFilter</filter-name>-->
       <!--<filter-class>org.apache.myfaces.extensions.scripting.servlet.ScriptingServletFilter</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
       <!--<filter-name>scriptingFilter</filter-name>-->
       <!--<servlet-name>Faces Servlet</servlet-name>-->
    <!--</filter-mapping>-->

    <welcome-file-list>
        <welcome-file>/dashboard/dashboard.jsf</welcome-file>
    </welcome-file-list>

    <session-config>
        <!-- Timeout is currently 10h -->
        <session-timeout>600</session-timeout>
    </session-config>

    <resource-ref>
        <res-ref-name>jdbc/IntactEditorDS</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>

</web-app>
