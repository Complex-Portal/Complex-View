<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:fn="http://java.sun.com/jsp/jstl/functions"
                xmlns:p="http://primefaces.org/ui"
                xmlns:ia="http://java.sun.com/jsf/composite/intact-components"
                xmlns:ed="http://ebi.ac.uk/intact/editor/ui"

                template="/curate/curate_template.xhtml">

<ui:param name="annotatedObjectController" value="#{complexController}"/>

<ui:param name="interaction" value="#{complexController.complex}" />

<ui:define name="metadata">
    <f:metadata>
        <f:viewParam name="ac" value="#{complexController.ac}"/>
        <f:event type="preRenderView" listener="#{editorCvTermService.loadDataIfNotDone}"/>
        <f:event type="preRenderView" listener="#{editorOrganismService.loadDataIfNotDone}"/>
        <f:event type="preRenderView" listener="#{complexController.loadData}"/>
        <f:event type="preRenderView" listener="#{curateController.setCurrentAnnotatedObjectController(complexController)}"/>
    </f:metadata>
</ui:define>

<ui:define name="topActionsPanel">
    <p:commandButton value="Claim ownership"
                     styleClass="important-button-alt"
                     rendered="#{complexController.newComplex}"
                     actionListener="#{complexController.markAsAssignedToMe}"
                     action="#{complexController.doSave}" ajax="false"/>
    <p:commandButton value="Start curation"
                     styleClass="important-button-alt"
                     rendered="#{complexController.assigned and userSessionController.isJamiUserMe(complexController.complex.currentOwner)}"
                     actionListener="#{complexController.markAsCurationInProgress}"
                     action="#{complexController.doSave}" ajax="false"/>
    <p:commandButton value="Ready for checking"
                     styleClass="important-button-alt"
                     rendered="#{complexController.curationInProgress and not complexController.beenRejectedBefore and userSessionController.isJamiUserMe(complexController.complex.currentOwner)}"
                     actionListener="#{complexController.markAsReadyForChecking}"
                     action="#{complexController.doSave}" ajax="false"/>
    <p:commandButton value="Ready for checking (Again)"
                     styleClass="important-button-alt"
                     rendered="#{complexController.curationInProgress and complexController.beenRejectedBefore and userSessionController.isJamiUserMe(complexController.complex.currentOwner)}"
                     actionListener="#{complexController.markAsReadyForChecking}"
                     action="#{complexController.doSave}" ajax="false"/>
    <p:commandButton value="Accept Complex"
                     styleClass="important-button-good"
                     rendered="#{complexController.readyForChecking and userSessionController.isJamiUserMe(complexController.complex.currentReviewer)}"
                     actionListener="#{complexController.acceptComplex}"
                     action="#{complexController.doSave}" ajax="false"/>
    <p:commandButton value="Back to Curation in Progress"
                     styleClass="important-button-alt"
                     rendered="#{complexController.readyForChecking and userSessionController.isJamiUserMe(complexController.complex.currentOwner) and complexController.backToCurationButtonRendered}"
                     actionListener="#{complexController.revertReadyForChecking}"
                     action="#{complexController.doSave}" ajax="false"/>
    <p:commandButton value="Send Back to Curation"
                     styleClass="important-button-alt"
                     rendered="#{complexController.readyForChecking and userSessionController.isJamiUserMe(complexController.complex.currentReviewer)}"
                     actionListener="#{complexController.rejectComplex}"
                     action="#{complexController.doSave}" ajax="false"/>
    <p:commandButton value="Revert Accepted"
                     styleClass="important-button-alt"
                     rendered="#{complexController.readyForRelease and !complexController.released and userSessionController.isJamiUserMe(complexController.complex.currentReviewer)}"
                     actionListener="#{complexController.revertAccepted}"
                     action="#{complexController.doSave}" ajax="false"/>
    <p:commandButton value="Put on hold" type="button"
                     styleClass="important-button-bad"
                     rendered="#{(complexController.readyForRelease or complexController.released) and (userSessionController.isJamiUserMe(complexController.complex.currentOwner) or userSessionController.isJamiUserMe(complexController.complex.currentReviewer))}"
                     onclick="putOnHoldDialog.show()"/>
    <p:commandButton value="Ready for Release (removes on-hold)"
                     styleClass="important-button-alt"
                     rendered="#{complexController.acceptedOnHold and (userSessionController.isJamiUserMe(complexController.complex.currentReviewer) or userSessionController.isJamiUserMe(complexController.complex.currentOwner))}"
                     actionListener="#{complexController.readyForReleaseFromOnHold}"
                     action="#{complexController.doSave}" ajax="false"/>
</ui:define>

<ui:define name="breadcrumbs">
    <p:breadCrumb>
        <p:menuitem ajax="false" onclick="loadDialog.show()" value="#{complexController.name}"
                    action="/curate/complex?includeViewParams=true&amp;faces-redirect=true" process="@this"/>
        <p:menuitem ajax="false" onclick="loadDialog.show()" value="#{complexController.name}"
                    action="/curate/complex?includeViewParams=true&amp;faces-redirect=true" process="@this"/>
    </p:breadCrumb>
</ui:define>

<ui:define name="toolsContextual">
    <p:submenu label="Export">
        <ui:include src="export_submenu.xhtml">
            <ui:param name="slug" value="interaction"/>
            <ui:param name="ac" value="#{complexController.ac}"/>
        </ui:include>
    </p:submenu>
</ui:define>

<ui:define name="curateContent">

<h:panelGroup rendered="#{interaction == null}">
    No interaction loaded!
</h:panelGroup>

<h:panelGroup id="info" rendered="#{interaction != null}">

<p:panel id="basic" header="Complex Details">

    <p:outputPanel id="infoPanels">
        <h:panelGroup rendered="#{complexController.toBeReviewed}">
            <ia:panelMessage level="warn">
                <b>To be reviewed: </b> #{complexController.toBeReviewed}
                &#160;&#160;&#160;
                <p:commandButton value="Clear" rendered="#{userSessionController.isItMe(complexController.complex.currentReviewer)}"
                                 actionListener="#{complexController.clearToBeReviewed}" update=":editorForm:centralUnit"/>
            </ia:panelMessage>
        </h:panelGroup>

        <h:panelGroup rendered="#{complexController.onHold}">
            <ia:panelMessage level="warn">
                This Complex is <b>on-hold</b>. Reason: #{complexController.onHold}
                &#160;&#160;&#160;
                <p:commandButton value="Clear" onclick="document.getElementById('clearOnHoldBtn').click();" />
            </ia:panelMessage>
        </h:panelGroup>

        <ui:include src="common_info_panels.xhtml">
            <ui:param name="annotatedObjectController" value="#{complexController}"/>
        </ui:include>
    </p:outputPanel>

    <h:panelGroup rendered="#{interaction != null}">
        <div id="auditInfo" class="intact-auditPanel">
            <ia:jcreatorUpdator annotatedObject="#{interaction}" />
        </div>
    </h:panelGroup>

    <table class="intact-tableBasicForm">
        <tr>
            <td class="firstCell">
                <h:outputLabel value="Shortlabel: " for="shortlabelTxt"/>
            </td>
            <td>
                <p:inputText id="shortlabelTxt" value="#{interaction.shortName}" size="30"
                             validator="#{annotatedObjectController.validateAnnotatedObject}" converter="trimmingConverter"
                             required="true" requiredMessage="Shortlabel is required">
                    <p:ajax event="change" update=":editorForm:messagesComponent,:editorForm:changesPanel,:editorForm:unsavedChangesInfo" async="true" process="@this" oncomplete="markAsJamiUnsaved()"/>
                </p:inputText>
            </td>
            <td style="padding-left: 50px;">
                <h:outputLabel value="AC: " for="acTxt" styleClass="intact-disabled"/>
                <p:inputText id="acTxt" value="#{interaction.ac}"
                             size="10" readonly="true"/>
            </td>
        </tr>
        <tr>
            <td colspan="1" class="firstCell">
                <h:outputLabel value="Complex type: " for="complexTypeTxt"/>
            </td>
            <td colspan="3">
                <ia:inputCvTerm id="complexTypeTxt" cvIdentifier="MI:0314"
                                value="#{interaction.interactorType}"
                                selectItems="#{editorCvTermService.interactorTypeSelectItems}"
                                required="true" requiredMessage="Complex type is required"
                                oncomplete="ia_enableSave()"
                                update=":editorForm:changesPanel,:editorForm:unsavedChangesInfo,:editorForm:messagesComponent"
                                valueChangeAwareObject="#{complexController}"/>
            </td>
        </tr>
        <tr>
            <td colspan="1" class="firstCell">
                <h:outputLabel value="Interaction type: " for="interactionTypeTxt"/>
            </td>
            <td colspan="3">
                <ia:inputCvTerm id="interactionTypeTxt" cvIdentifier="MI:0190"
                                value="#{interaction.interactionType}"
                                selectItems="#{editorCvTermService.interactionTypeSelectItems}"
                                required="true" requiredMessage="Interaction type is required"
                                oncomplete="ia_enableSave()"
                                update=":editorForm:changesPanel,:editorForm:unsavedChangesInfo,:editorForm:messagesComponent"
                                valueChangeAwareObject="#{complexController}"/>
            </td>
        </tr>
        <tr>
            <td colspan="1" class="firstCell">
                <h:outputLabel value="ECO code: " for="ecoCodeTxt"/>
            </td>
            <td colspan="3">
                <ia:inputCvTerm id="ecoCodeTxt" cvIdentifier="MI:1331"
                                value="#{interaction.evidenceType}"
                                selectItems="#{editorCvTermService.evidenceTypeSelectItems}"
                                required="true" requiredMessage="ECO code is required"
                                oncomplete="ia_enableSave()"
                                update=":editorForm:changesPanel,:editorForm:unsavedChangesInfo,:editorForm:messagesComponent"
                                valueChangeAwareObject="#{complexController}"/>
            </td>
        </tr>
        <tr>
            <td colspan="1" class="firstCell">
                <h:outputLabel value="Organism: " for="organismTxt"/>
            </td>
            <td colspan="3">
                <ia:inputOrganism id="organismTxt" value="#{complex.organism}"
                                  valueChangeAwareObject="#{complexController}"
                                  oncomplete="ia_enableSave()"
                                  update=":editorForm:changesPanel,:editorForm:unsavedChangesInfo,:editorForm:messagesComponent"
                                  selectItems="#{editorOrganismService.organismSelectItems}">
                    <ed:curation/>
                </ia:inputOrganism>
            </td>
        </tr>
        <tr>
            <td class="firstCell">
                <h:outputLabel value="Recommended name: " for="recommendedNameTxt"/>
            </td>
            <td colspan="2">
                <h:panelGroup>
                    <p:inputText id="recommendedNameTxt" value="#{complexController.recommendedName}" size="70"
                                 valueChangeListener="#{complexController.onRecommendedNameChange}">
                        <ed:curation/>
                    </p:inputText>
                </h:panelGroup>
            </td>
        </tr>
        <tr>
            <td class="firstCell">
                <h:outputLabel value="Systematic name: " for="systematicNameTxt"/>
            </td>
            <td colspan="2">
                <h:panelGroup>
                    <p:inputText id="systematicNameTxt" value="#{complexController.systematicName}" size="70"
                                 valueChangeListener="#{complexController.onSystematicNameChange}">
                        <ed:curation/>
                    </p:inputText>
                </h:panelGroup>
            </td>
        </tr>
        <tr>
            <td class="firstCell">
                <h:outputLabel value="On hold: " for="onHoldTxt"/>
            </td>
            <td colspan="3">
                <h:panelGroup>
                    <p:inputText id="onHoldTxt" value="#{complexController.onHold}" size="70"
                                 valueChangeListener="#{complexController.onHoldChanged}">
                        <ed:curation/>
                    </p:inputText>
                </h:panelGroup>
            </td>
        </tr>
        <tr>
            <td class="firstCell">
                <h:outputLabel value="Description: " for="curatedComplexTxt"/>
            </td>
            <td colspan="3">
                <h:panelGroup>
                    <p:inputTextarea id="curatedComplexTxt" value="#{complexController.description}"
                                     valueChangeListener="#{complexController.onDescriptionChange}" rows="5" cols="80">
                        <ed:curation/>
                    </p:inputTextarea>
                </h:panelGroup>
            </td>
        </tr>
        <tr>
            <td class="firstCell">
                <h:outputLabel value="Complex properties: " for="complexPropertiesTxt"/>
            </td>
            <td colspan="2">
                <h:panelGroup>
                    <p:inputText id="complexPropertiesTxt" value="#{complexController.complexProperties}" size="70"
                                 valueChangeListener="#{complexController.onComplexPropertiesChange}">
                        <ed:curation/>
                    </p:inputText>
                </h:panelGroup>
            </td>
        </tr>
    </table>

    <!--</ia:panelFormLayout>-->
</p:panel>

<br/>

<p:tabView id="complexTabs" dynamic="true">
    <p:ajax event="tabChange" listener="#{complexController.onTabChanged}" />

    <p:tab id="participantsTab" title="Participants (#{complexController.participants.size()})">

        <p:panel style="padding:0">
            Participants:&#160;
            <p:commandButton value="New participant" action="#{modelledParticipantController.newParticipant(complexController.complex)}"
                             ajax="false"/>
            <p:commandButton id="importParticipantBtn" value="Import..." type="button" onclick="jimportParticipantDialog.show()"/>
            &#160;| Features:&#160;
            <p:commandButton value="Link features" actionListener="#{complexController.linkSelectedFeatures}" ajax="false"/>
        </p:panel>

        <ia:spacer height="10" />

        <ui:include src="jdialog_import_participant.xhtml"/>

        <p:outputPanel id="participantsPanel" autoUpdate="true">
            <ui:include src="jparticipants_table.xhtml">
                <ui:param name="value" value="#{complexController.participants}"/>
            </ui:include>
        </p:outputPanel>
    </p:tab>

    <ui:decorate template="jpropertiesTabs.xhtml">
        <ui:param name="annotatedObjectSelectItems" value="#{editorCvTermService.complexTopicSelectItems}"/>
        <ui:param name="databaseSelectItems" value="#{editorCvTermService.complexDatabaseSelectItems}"/>
        <ui:param name="qualifierSelectItems" value="#{editorCvTermService.qualifierSelectItems}"/>
        <ui:param name="aliasTypeSelectItems" value="#{editorCvTermService.aliasTypeSelectItems}"/>
        <ui:param name="updateOnChange" value=":editorForm:basic"/>
    </ui:decorate>

    <p:tab id="parametersTab" title="Parameters (#{interaction.parametersSize})">

        <p:outputPanel id="parametersPanel" autoUpdate="true">
            <ui:decorate template="jparameters_table.xhtml">
                <ui:param name="annotatedObjectController" value="#{complexController}"/>
                <ui:param name="parameterTypeSelectItems" value="#{editorCvTermService.parameterTypeSelectItems}"/>
                <ui:param name="parameterUnitSelectItems" value="#{editorCvTermService.parameterUnitSelectItems}"/>
                <ui:param name="update" value=":editorForm:changesPanel :editorForm:unsavedChangesInfo :editorForm:messagesComponent"/>
                <ui:param name="disableParameterSelectItems" value="#{complexController.isParameterDisabled()}"/>
            </ui:decorate>
        </p:outputPanel>

    </p:tab>

    <p:tab id="confidencesTab" title="Confidences (#{complexController.confidencesSize})">

        <p:outputPanel id="confidencesPanel" autoUpdate="true">
            <ui:decorate template="jconfidences_table.xhtml">
                <ui:param name="annotatedObjectController" value="#{complexController}"/>
                <ui:param name="confidenceTypeSelectItems" value="#{editorCvTermService.confidenceTypeSelectItems}"/>
                <ui:param name="update" value=":editorForm:changesPanel :editorForm:unsavedChangesInfo :editorForm:messagesComponent"/>
                <ui:param name="disableConfidenceSelectItems" value="#{complexController.isConfidenceDisabled()}"/>
            </ui:decorate>
        </p:outputPanel>

    </p:tab>

    <p:tab id="lifeCycleTab" title="Lifecycle">

        <h:panelGrid columns="2">
            <h:outputLabel for="statusTxt" value="Status: "/>
            <h:outputText id="statusTxt" value="#{complexController.complex.status}"/>

            <h:outputLabel for="ownerTxt" value="Owner: " rendered="#{complexController.complex.currentOwner != null}"/>
            <h:outputText id="ownerTxt" value="#{complexController.complex.currentOwner.login}"
                          rendered="#{complexController.complex.currentOwner != null}"/>

            <h:outputLabel value="Reviewer: " rendered="#{complexController.complex.currentReviewer != null}"/>

            <h:outputText value="#{complexController.complex.currentReviewer.login}"
                          rendered="#{!userSessionController.hasRole('ADMIN') and complexController.complex.currentReviewer != null}"/>

            <h:selectOneMenu value="#{complexController.complex.currentReviewer}" hideNoSelectionOption="true"
                             rendered="#{(userSessionController.hasRole('ADMIN') and complexController.complex.currentReviewer != null)
                                 or complexController.isLifeCycleDisabled()}">
                <f:selectItems value="#{userAdminController.reviewerSelectItems}"/>
                <p:ajax event="change" process="@this" oncomplete="markAsUnsaved()" update=":editorForm:changesPanel,:editorForm:unsavedChangesInfo,:editorForm:messagesComponent"/>

            </h:selectOneMenu>
        </h:panelGrid>

        <br/>

        <p:fieldset legend="Events">

            <p:dataTable var="event" value="#{complexController.lifecycleEvents}">
                <p:column headerText="Date">
                    <h:outputText value="#{event.when}">
                        <f:convertDateTime pattern="dd-MM-yyyy HH:mm"/>
                    </h:outputText>
                </p:column>
                <p:column headerText="Event">
                    <h:outputText value="#{event.event}"/>
                </p:column>
                <p:column headerText="Who">
                    <h:outputText value="#{event.who}"/>
                </p:column>
                <p:column headerText="Comment">
                    <h:outputText value="#{event.note}"/>
                </p:column>
            </p:dataTable>

        </p:fieldset>

    </p:tab>
</p:tabView>

</h:panelGroup>

<!-- DIALOGS -->
<p:dialog header="Put on hold" width="600" widgetVar="putOnHoldDialog" draggable="false"
          modal="true" position="center">
    <h:panelGrid columns="3" style="margin-bottom:10px">
        <h:outputLabel for="putOnHoldTxt" value="Reason for on-hold:"/>
        <p:inputTextarea id="putOnHoldTxt" value="#{complexController.reasonForOnHoldFromDialog}" rows="4" cols="60" converter="trimmingConverter"/>

        <p:commandButton value="Put on hold" actionListener="#{complexController.putOnHold}"
                         action="#{complexController.doSave}"
                         process="putOnHoldTxt"
                         ajax="false"/>
    </h:panelGrid>
</p:dialog>

</ui:define>

</ui:composition>
