<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:fn="http://java.sun.com/jsp/jstl/functions"
                xmlns:p="http://primefaces.org/ui"
                xmlns:ia="http://java.sun.com/jsf/composite/intact-components"
                xmlns:ed="http://ebi.ac.uk/intact/editor/ui">

    <p:dataTable id="rangesTable" var="modelledRangeWrapper" value="#{value}"
                 paginator="true" rows="10" paginatorAlwaysVisible="false" paginatorPosition="both">
        <p:column style="width:16px">
            <p:rowToggler/>
        </p:column>
        <p:column>
            <f:facet name="header">
                <h:outputText value="AC"/>
            </f:facet>
            <h:outputText value="#{modelledRangeWrapper.range.ac}" styleClass="#{changesController.isDeletedAc(modelledRangeWrapper.range.ac)? 'intact-deleted' : ''}"/>
        </p:column>
        <p:column>
            <f:facet name="header">
                <h:outputText value="Value"/>
            </f:facet>
            <h:inputText id="rangeTxt" value="#{modelledRangeWrapper.rangeAsString}"
                         validator="#{modelledRangeWrapper.validateRange}"
                         required="true"
                         requiredMessage="Range value is required"
                         readonly="#{changesController.isDeletedAc(modelledRangeWrapper.range.ac)}"
                         styleClass="#{changesController.isDeletedAc(modelledRangeWrapper.range.ac)? 'intact-deleted' : ''}"
                         style="font-family: monospace">
                <f:ajax event="valueChange" render=":editorForm:featureTabs:rangesPanel :editorForm:messagesComponent :editorForm:changesPanel :editorForm:unsavedChangesInfo"
                        listener="#{modelledRangeWrapper.onRangeAsStringChanged}" onevent="markAsUnsaved()"/>
            </h:inputText>
        </p:column>
        <p:column>
            <f:facet name="header">
                <h:outputText value="From type"/>
            </f:facet>
            <h:selectOneMenu id="fromCvFuzzyType" value="#{modelledRangeWrapper.range.start.status}" converter="cvTermConverter"
                             required="true"
                             requiredMessage="Range from CvFuzzyType is required" disabled="#{modelledFeatureController.isRangeDisabled()}">
                <f:ajax event="valueChange" render=":editorForm:featureTabs:rangesPanel :editorForm:messagesComponent :editorForm:changesPanel :editorForm:unsavedChangesInfo"
                        listener="#{modelledRangeWrapper.onFuzzyTypeChanged}" onevent="markAsUnsaved()"/>
                <f:selectItems value="#{fuzzyTypeSelectItems}"/>
            </h:selectOneMenu>
        </p:column>
        <p:column>
            <f:facet name="header">
                <h:outputText value="To type"/>
            </f:facet>
            <h:selectOneMenu id="toCvFuzzyType" value="#{modelledRangeWrapper.range.end.status}" converter="cvTermConverter"
                             required="true"
                             requiredMessage="Range to CvFuzzyType is required" disabled="#{modelledFeatureController.isRangeDisabled()}">
                <f:ajax event="valueChange" render=":editorForm:messagesComponent :editorForm:changesPanel :editorForm:unsavedChangesInfo"
                        listener="#{modelledRangeWrapper.onFuzzyTypeChanged}" onevent="markAsUnsaved()"/>
                <f:selectItems value="#{fuzzyTypeSelectItems}"/>
            </h:selectOneMenu>
        </p:column>
        <p:column>
            <f:facet name="header">
                <h:outputText value="Intramolecular"/>
            </f:facet>
            <h:selectBooleanCheckbox value="#{modelledRangeWrapper.linked}" disabled="#{modelledFeatureController.isRangeDisabled()}">
                <f:ajax event="valueChange" render=":editorForm:messagesComponent :editorForm:changesPanel :editorForm:unsavedChangesInfo"
                        onevent="markAsUnsaved()"/>
             </h:selectBooleanCheckbox>
        </p:column>
        <p:column>
            <f:facet name="header">
                <h:outputText value="Actions"/>
            </f:facet>
            <p:commandLink id="markDeletedBtn" process="markDeletedBtn" immediate="true" title="Mark to be deleted" styleClass="ui-icon ui-icon-closethick"
                           actionListener="#{modelledFeatureController.markRangeToDelete(modelledRangeWrapper.range)}"
                           update=":editorForm:changesPanel,:editorForm:messagesComponent,:editorForm:unsavedChangesInfo" rendered="#{not changesController.isDeletedAc(modelledRangeWrapper.range.ac)}"
                           />
            <p:commandLink id="revertBtn" process="revertBtn" immediate="true" title="Revert" styleClass="ui-icon ui-icon-arrowreturnthick-1-w"
                           actionListener="#{changesController.revertJami(modelledRangeWrapper.range)}"
                           update=":editorForm:changesPanel,:editorForm:messagesComponent,:editorForm:unsavedChangesInfo" rendered="#{changesController.isDeletedAc(modelledRangeWrapper.range.ac)}"/>
        </p:column>

        <p:rowExpansion rendered="#{modelledRangeWrapper.range.resultingSequence != null}">
            <h:panelGrid columns="2">
                <h:outputText value="Original Sequence:"/>
                <p:inputTextarea value="#{modelledRangeWrapper.range.resultingSequence.originalSequence}" readonly="true" cols="60" rows="3"
                                 rendered="#{modelledRangeWrapper.range.resultingSequence.originalSequence != null}"/>

                <h:outputText value="New sequence (mutated sequence):"/>
                <p:inputTextarea value="#{modelledRangeWrapper.range.resultingSequence.newSequence}" cols="60" rows="3"/>

                <h:outputText value="Refers to participant:"/>
                <h:selectOneMenu id="linkedParticipantMenu" value="#{modelledRangeWrapper.range.participant}" converter="modelledParticipantConverter"
                                 rendered="#{modelledFeatureController.complexFeature}" disabled="#{!modelledFeatureController.complexFeature
                                 or modelledFeatureController.isRangeDisabled()}">
                    <f:ajax event="valueChange" render=":editorForm:featureTabs:rangesPanel :editorForm:messagesComponent :editorForm:changesPanel :editorForm:unsavedChangesInfo"
                            onevent="markAsUnsaved()" listener="#{modelledRangeWrapper.onSeqenceChanged}"/>
                    <f:selectItems value="#{participantSelectItems}"/>
                </h:selectOneMenu>
            </h:panelGrid>
        </p:rowExpansion>

    </p:dataTable>

</ui:composition>
