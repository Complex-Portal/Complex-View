<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:fn="http://java.sun.com/jsp/jstl/functions"
                xmlns:p="http://primefaces.prime.com.tr/ui"
                xmlns:ia="http://java.sun.com/jsf/composite/components/intact"
                xmlns:ed="http://ebi.ac.uk/intact/editor/ui">

            <p:dataTable var="rangeWrapper" value="#{value}"
                         paginator="true" rows="10" paginatorAlwaysVisible="false">
                <p:column style="width:16px">
                    <p:rowToggler/>
                </p:column>
                <p:column>
                    <f:facet name="header">
                        <h:outputText value="AC"/>
                    </f:facet>
                    <h:outputText value="#{rangeWrapper.range.ac}" styleClass="#{changesController.isDeletedAc(rangeWrapper.range.ac)? 'intact-deleted' : ''}"/>
                </p:column>
                <p:column>
                    <f:facet name="header">
                        <h:outputText value="Value"/>
                    </f:facet>
                    <h:inputText id="rangeTxt" value="#{rangeWrapper.rangeAsString}"
                                 onblur="markToUnsaved()"
                                 validator="#{rangeWrapper.validateRange}"
                                 required="true"
                                 requiredMessage="Range value is required"
                                 readonly="#{changesController.isDeletedAc(rangeWrapper.range.ac)}"
                                 styleClass="#{changesController.isDeletedAc(rangeWrapper.range.ac)? 'intact-deleted' : ''}"
                                 style="font-family: monospace">
                        <f:ajax event="valueChange" listener="#{rangeWrapper.onRangeAsStringChanged}" onevent="markAsUnsaved()" execute="@this" render=":editorForm:rangesTable :editorForm:messagesComponent"/>
                    </h:inputText>

                     <h:panelGroup id="validityPanel">

                         <h:panelGroup rendered="#{not rangeWrapper.validRange}">
                                    <span class="ui-icon ui-icon-alert" style="display:inline-block"
                                          title="#{rangeWrapper.badRangeInfo}"/>
                         </h:panelGroup>
                     </h:panelGroup>
                </p:column>
                <p:column>
                    <f:facet name="header">
                        <h:outputText value="From type"/>
                    </f:facet>
                    <h:selectOneMenu id="fromCvFuzzyType" value="#{rangeWrapper.range.fromCvFuzzyType}" converter="cvObjectConverter"
                            onchange="markAsUnsaved()"
                            required="true"
                            requiredMessage="Range from CvFuzzyType is required">
                        <f:ajax event="valueChange" listener="#{rangeWrapper.onFuzzyTypeChanged}" onevent="markAsUnsaved()" execute="@this" render=":editorForm:rangesTable :editorForm:messagesComponent"/>
                        <f:selectItems value="#{cvObjectService.fuzzyTypeSelectItems}"/>
                    </h:selectOneMenu>
                </p:column>
                <p:column>
                    <f:facet name="header">
                        <h:outputText value="To type"/>
                    </f:facet>
                    <h:selectOneMenu id="toCvFuzzyType" value="#{rangeWrapper.range.toCvFuzzyType}" converter="cvObjectConverter"
                            onChange="markAsUnsaved()"
                            required="true"
                            requiredMessage="Range to CvFuzzyType is required">
                        <f:ajax event="valueChange" listener="#{rangeWrapper.onFuzzyTypeChanged}" onevent="markAsUnsaved()" execute="@this" render=":editorForm:rangesTable :editorForm:messagesComponent"/>
                        <f:selectItems value="#{cvObjectService.fuzzyTypeSelectItems}"/>
                    </h:selectOneMenu>
                </p:column>
                <p:column>
                    <f:facet name="header">
                        <h:outputText value="Linked"/>
                    </f:facet>
                    <h:outputText value="#{feature.boundDomain != null? 'Yes' : 'No'}"/>
                </p:column>
                <p:column>
                    <f:facet name="header">
                        <h:outputText value="Actions"/>
                    </f:facet>
                    <p:commandLink immediate="true" title="Mark to be deleted" styleClass="ui-icon ui-icon-closethick"
                               actionListener="#{featureController.markRangeToDelete(rangeWrapper.range)}"
                               update="rangesTable,growl,changesPanel,messagesComponent" rendered="#{not changesController.isDeletedAc(rangeWrapper.range.ac)}"
                               onclick="markAsUnsaved()"/>
                    <p:commandLink immediate="true" title="Revert" styleClass="ui-icon ui-icon-arrowreturnthick-1-w"
                               actionListener="#{changesController.revert(rangeWrapper.range)}"
                               update="rangesTable,growl,changesPanel,messagesComponent" rendered="#{changesController.isDeletedAc(rangeWrapper.range.ac)}"/>
                </p:column>

                <f:facet name="expansion">
                    <h:panelGrid columns="2">
                        <h:outputText value="Sequence:"/>
                        <h:inputTextarea value="#{rangeWrapper.range.fullSequence}" readonly="true" cols="60" rows="3"/>

                        <h:outputText value="Upstream sequence:"/>
                        <h:inputTextarea value="#{rangeWrapper.range.upStreamSequence}" readonly="true" cols="60" rows="3"/>

                        <h:outputText value="Downstream sequence:"/>
                        <h:inputTextarea value="#{rangeWrapper.range.downStreamSequence}" readonly="true" cols="60" rows="3"/>
                    </h:panelGrid>
                </f:facet>

            </p:dataTable>

</ui:composition>