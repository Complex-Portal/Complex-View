<?xml version="1.0" encoding="UTF-8"?><!-- Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.1.3-b02-. --><definitions xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:psq="http://psi.hupo.org/mi/psicquic" xmlns:mif="http://psi.hupo.org/mi/mif" xmlns:mitab="http://psi.hupo.org/mi/mitab" targetNamespace="http://psi.hupo.org/mi/psicquic">

    <types>

        <xs:schema elementFormDefault="qualified" targetNamespace="http://psi.hupo.org/mi/psicquic">

            <xs:import namespace="http://psi.hupo.org/mi/mif" schemaLocation="http://psidev.sourceforge.net/mi/rel25/src/MIF254.xsd"></xs:import>
            <xs:import namespace="http://psi.hupo.org/mi/mitab" schemaLocation="http://www.ebi.ac.uk/~intact/mi/psimitab-1.0.xsd"></xs:import>

            <!-- types -->

            <xs:complexType name="dbRefType">

                <xs:sequence>
                    <xs:element name="db" type="xs:string" default=""></xs:element>
                    <xs:element name="ac" type="xs:string" default=""></xs:element>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="dbRefListType">
                <xs:sequence>
                    <xs:element name="dbRef" type="psq:dbRefType" minOccurs="1" maxOccurs="unbounded"></xs:element>

                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="queryType">
                <xs:sequence>
                    <xs:element name="queryFormat" type="xs:string"></xs:element>
                    <xs:element name="queryString" type="xs:string"></xs:element>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="resultInfoType">
                <xs:sequence>
                    <xs:element name="firstResult" type="xs:int"></xs:element>
                    <xs:element name="totalResults" type="xs:int"></xs:element>
                    <xs:element name="blockSize" type="xs:int"></xs:element>
                    <xs:element name="expirationDate" type="xs:dateTime"></xs:element>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="dbRefRequestType">
                <xs:sequence>
                    <xs:element name="dbRef" type="psq:dbRefType"></xs:element>
                    <xs:element name="resultType" type="xs:string"></xs:element>
                    <xs:element name="firstResult" type="xs:int" default="0"></xs:element>
                    <xs:element name="blockSize" type="xs:int" default="200"></xs:element>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="dbRefListRequestType">
                <xs:sequence>
                    <xs:element name="dbRefList" type="psq:dbRefType"></xs:element>
                    <xs:element name="resultType" type="xs:string"></xs:element>
                    <xs:element name="firstResult" type="xs:int" default="0"></xs:element>
                    <xs:element name="blockSize" type="xs:int" default="200"></xs:element>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="queryRequestType">
                <xs:sequence>
                    <xs:element name="query" type="psq:queryType"></xs:element>
                    <xs:element name="resultType" type="xs:string"></xs:element>
                    <xs:element name="firstResult" type="xs:int" default="0"></xs:element>
                    <xs:element name="blockSize" type="xs:int" default="200"></xs:element>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="queryResponseType">
                <xs:sequence>
                    <xs:element name="resultSet" type="psq:resultSetType"></xs:element>
                    <xs:element name="resultInfo" type="psq:resultInfoType"></xs:element>
                </xs:sequence>
            </xs:complexType>

            <xs:complexType name="resultSetType">
                <xs:sequence>

                    <xs:element name="entrySet" type="mif:entrySetType" minOccurs="0" maxOccurs="1"></xs:element>
                    <xs:element name="mitab" type="mitab:mitabType" minOccurs="0" maxOccurs="1"></xs:element>
                </xs:sequence>
            </xs:complexType>

            <!-- elements -->

            <xs:element name="getByInteractorRequest" type="psq:dbRefRequestType"></xs:element>
            <xs:element name="getByInteractionRequest" type="psq:dbRefRequestType"></xs:element>
            <xs:element name="getByInteractorListRequest" type="psq:dbRefListRequestType"></xs:element>

            <xs:element name="getByInteractionListRequest" type="psq:dbRefListType"></xs:element>
            <xs:element name="getBetweenListRequest" type="psq:dbRefListRequestType"></xs:element>
            <xs:element name="getByQueryStringRequest" type="psq:queryRequestType"></xs:element>

            <xs:element name="getVersionResponse" type="xs:string"></xs:element>
            <xs:element name="supportedDataTypes">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="dataType" type="xs:string" maxOccurs="unbounded"></xs:element>

                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <xs:element name="queryResponse" type="psq:queryResponseType"></xs:element>

            <!-- faults -->

            <xs:element name="psicquicFault">
                <xs:complexType>

                    <xs:sequence>
                        <xs:element name="code" type="xs:int"></xs:element>
                        <xs:element name="message" type="xs:string"></xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

        </xs:schema>

    </types>

    <!-- MESSAGES -->

    <message name="getByInteractorRequestMessage">
        <part name="dbRef" element="psq:getByInteractorRequest"></part>
    </message>

    <message name="getByInteractorResponseMessage">
        <part name="queryResponse" element="psq:queryResponse"></part>
    </message>

    <message name="getByInteractionRequestMessage">
        <part name="dbRef" element="psq:getByInteractionRequest"></part>
    </message>

    <message name="getByInteractionResponseMessage">
        <part name="queryResponse" element="psq:queryResponse"></part>
    </message>

    <message name="getByInteractorListRequestMessage">

        <part name="dbRefList" element="psq:getByInteractorListRequest"></part>
    </message>

    <message name="getByInteractorListResponseMessage">
        <part name="queryResponse" element="psq:queryResponse"></part>
    </message>

    <message name="getBetweenListRequestMessage">
        <part name="dbRefList" element="psq:getBetweenListRequest"></part>

    </message>

    <message name="getBetweenListResponseMessage">
        <part name="queryResponse" element="psq:queryResponse"></part>
    </message>

    <message name="getByInteractionListRequestMessage">
        <part name="dbRefList" element="psq:getByInteractionListRequest"></part>
    </message>

    <message name="getByInteractionListResponseMessage">
        <part name="queryResponse" element="psq:queryResponse"></part>
    </message>

    <message name="getByQueryRequestMessage">
        <part name="query" element="psq:getByQueryStringRequest"></part>
    </message>

    <message name="getByQueryResponseMessage">
        <part name="queryResponse" element="psq:queryResponse"></part>

    </message>

    <message name="getVersionRequestMessage">
    </message>

    <message name="getVersionResponseMessage">
        <part name="output" element="psq:getVersionResponse"></part>
    </message>

    <message name="getSupportedDataTypesRequestMessage">

    </message>

    <message name="getSupportedDataTypesResponseMessage">
        <part name="output" element="psq:supportedDataTypes"></part>
    </message>

    <message name="psicquicServiceException">
        <part name="fault" element="psq:psicquicFault"></part>
    </message>

    <message name="notSupportedDataTypeException">
        <part name="fault" element="psq:psicquicFault"></part>
    </message>

    <message name="notSupportedMethodException">
        <part name="fault" element="psq:psicquicFault"></part>
    </message>

    <!-- Port type (operations) -->

    <portType name="psicquicPortType">

        <!-- get interactions by interactor ref -->

        <operation name="getByInteractor" parameterOrder="dbRef">

            <input name="getByInteractorRequestMessage" message="psq:getByInteractorRequestMessage"></input>
            <output name="getByInteractorResponseMessage" message="psq:getByInteractorResponseMessage"></output>

            <fault name="getByInteractorException1" message="psq:psicquicServiceException"></fault>
            <fault name="getByInteractorException2" message="psq:notSupportedMethodException"></fault>

            <fault name="getByInteractorException3" message="psq:notSupportedDataTypeException"></fault>
        </operation>

        <!-- get interactions by interaction ref -->

        <operation name="getByInteraction" parameterOrder="dbRef">
            <input name="getByInteractionRequestMessage" message="psq:getByInteractionRequestMessage"></input>
            <output name="getbyInteractionResponseMessage" message="psq:getByInteractionResponseMessage"></output>

            <fault name="getByInteractionException1" message="psq:psicquicServiceException"></fault>

            <fault name="getByInteractionException2" message="psq:notSupportedMethodException"></fault>
            <fault name="getByInteractionException3" message="psq:notSupportedDataTypeException"></fault>
        </operation>

        <!-- get interactions by interactor ref list -->

        <operation name="getByInteractorList" parameterOrder="dbRefList">
            <input name="getByInteractorListRequestMessage" message="psq:getByInteractorListRequestMessage"></input>
            <output name="getByInteractorListResponseMessage" message="psq:getByInteractorListResponseMessage"></output>

            <fault name="getByInteractorListException1" message="psq:psicquicServiceException"></fault>
            <fault name="getByInteractorListException2" message="psq:notSupportedMethodException"></fault>
            <fault name="getByInteractorListException3" message="psq:notSupportedDataTypeException"></fault>
        </operation>

        <!-- get interactions between interactor ref list -->

        <operation name="getBetweenList" parameterOrder="dbRefList">
            <input name="getBetweenListRequestMessage" message="psq:getBetweenListRequestMessage"></input>
            <output name="getBetweenListResponseMessage" message="psq:getBetweenListResponseMessage"></output>

            <fault name="getBetweenListException1" message="psq:psicquicServiceException"></fault>
            <fault name="getBetweenListException2" message="psq:notSupportedMethodException"></fault>
            <fault name="getBetweenListException3" message="psq:notSupportedDataTypeException"></fault>
        </operation>

        <!-- get interactions by interaction ref list -->

        <operation name="getByInteractionList" parameterOrder="dbRefList">
            <input name="getByInteractionListRequestMessage" message="psq:getByInteractionListRequestMessage"></input>

            <output name="getByInteractionListResponseMessage" message="psq:getByInteractionListResponseMessage"></output>

            <fault name="getByInteractionListException1" message="psq:psicquicServiceException"></fault>
            <fault name="getByInteractionListException2" message="psq:notSupportedMethodException"></fault>
            <fault name="getByInteractionListException3" message="psq:notSupportedDataTypeException"></fault>
        </operation>

        <!-- get interactions by query sring -->

        <operation name="getByQuery" parameterOrder="query">

            <input name="getByQueryRequestMessage" message="psq:getByQueryRequestMessage"></input>
            <output name="getByQueryResponseMessage" message="psq:getByQueryResponseMessage"></output>

            <fault name="getByQueryException1" message="psq:psicquicServiceException"></fault>
            <fault name="getByQueryException2" message="psq:notSupportedMethodException"></fault>
            <fault name="getByQueryException3" message="psq:notSupportedDataTypeException"></fault>
        </operation>

        <!-- get version -->

        <operation name="getVersion">
            <input message="psq:getVersionRequestMessage"></input>
            <output name="getVersionResponseMessage" message="psq:getVersionResponseMessage"></output>

            <fault name="getVersionException" message="psq:psicquicServiceException"></fault>
        </operation>

        <!-- get supported data types -->

        <operation name="getSupportedDataTypes">

            <input message="psq:getSupportedDataTypesRequestMessage"></input>
            <output name="getSupportedDataTypesResponseMessage" message="psq:getSupportedDataTypesResponseMessage"></output>
            <fault name="getSupportedDataTypesException" message="psq:psicquicServiceException"></fault>
        </operation>

    </portType>

    <!-- BINDING (bind operations) -->

    <binding name="psicquicSoapBinding" type="psq:psicquicPortType">

        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"></soap:binding>

        <operation name="getByInteractor">

            <soap:operation soapAction="getByInteractor"></soap:operation>
            <input>
                <soap:body use="literal"></soap:body>
            </input>
            <output>
                <soap:body use="literal"></soap:body>

            </output>
            <fault name="getByInteractorException1">
                <soap:fault name="getByInteractorException1" use="literal"></soap:fault>
            </fault>
            <fault name="getByInteractorException2">
                <soap:fault name="getByInteractorException2" use="literal"></soap:fault>
            </fault>
            <fault name="getByInteractorException3">
                <soap:fault name="getByInteractorException3" use="literal"></soap:fault>

            </fault>
        </operation>

        <operation name="getByInteraction">
            <soap:operation soapAction="getByInteraction"></soap:operation>
            <input>
                <soap:body use="literal"></soap:body>
            </input>
            <output>

                <soap:body use="literal"></soap:body>
            </output>
            <fault name="getByInteractionException1">
                <soap:fault name="getByInteractionException1" use="literal"></soap:fault>
            </fault>
            <fault name="getByInteractionException2">
                <soap:fault name="getByInteractionException2" use="literal"></soap:fault>
            </fault>

            <fault name="getByInteractionException3">
                <soap:fault name="getByInteractionException3" use="literal"></soap:fault>
            </fault>
        </operation>

        <operation name="getByInteractorList">
            <soap:operation soapAction="getByInteractorList"></soap:operation>

            <input>
                <soap:body use="literal"></soap:body>

            </input>
            <output>
                <soap:body use="literal"></soap:body>
            </output>
            <fault name="getByInteractorListException1">
                <soap:fault name="getByInteractorListException1" use="literal"></soap:fault>
            </fault>
            <fault name="getByInteractorListException2">
                <soap:fault name="getByInteractorListException2" use="literal"></soap:fault>

            </fault>
            <fault name="getByInteractorListException3">
                <soap:fault name="getByInteractorListException3" use="literal"></soap:fault>
            </fault>

        </operation>

        <operation name="getBetweenList">
            <soap:operation soapAction="getBetweenList"></soap:operation>
            <input>

                <soap:body use="literal"></soap:body>
            </input>
            <output>
                <soap:body use="literal"></soap:body>

            </output>
            <fault name="getBetweenListException1">
                <soap:fault name="getBetweenListException1" use="literal"></soap:fault>
            </fault>

            <fault name="getBetweenListException2">
                <soap:fault name="getBetweenListException2" use="literal"></soap:fault>
            </fault>
            <fault name="getBetweenListException3">
                <soap:fault name="getBetweenListException3" use="literal"></soap:fault>
            </fault>
        </operation>

        <operation name="getByInteractionList">

            <soap:operation soapAction="getByInteractionList"></soap:operation>
            <input>
                <soap:body use="literal"></soap:body>
            </input>
            <output>
                <soap:body use="literal"></soap:body>
            </output>
            <fault name="getByInteractionListException1">
                <soap:fault name="getByInteractionListException1" use="literal"></soap:fault>

            </fault>
            <fault name="getByInteractionListException2">
                <soap:fault name="getByInteractionListException2" use="literal"></soap:fault>
            </fault>
            <fault name="getByInteractionListException3">
                <soap:fault name="getByInteractionListException3" use="literal"></soap:fault>
            </fault>
        </operation>

        <operation name="getByQuery">
            <soap:operation soapAction="getByQuery"></soap:operation>
            <input>
                <soap:body use="literal"></soap:body>
            </input>
            <output>
                <soap:body use="literal"></soap:body>
            </output>

            <fault name="getByQueryException1">
                <soap:fault name="getByQueryException1" use="literal"></soap:fault>
            </fault>
            <fault name="getByQueryException2">
                <soap:fault name="getByQueryException2" use="literal"></soap:fault>
            </fault>
            <fault name="getByQueryException3">
                <soap:fault name="getByQueryException3" use="literal"></soap:fault>
            </fault>

        </operation>

        <operation name="getVersion">
            <soap:operation soapAction="getVersion"></soap:operation>
            <input>
                <soap:body use="literal"></soap:body>
            </input>
            <output>
                <soap:body use="literal"></soap:body>

            </output>
            <fault name="getVersionException">
                <soap:fault name="getVersionException" use="literal"></soap:fault>
            </fault>

        </operation>

        <operation name="getSupportedDataTypes">
            <soap:operation soapAction="getSupportedDataTypes"></soap:operation>
            <input>

                <soap:body use="literal"></soap:body>
            </input>
            <output>
                <soap:body use="literal"></soap:body>
            </output>
            <fault name="getSupportedDataTypesException">
                <soap:fault name="getSupportedDataTypesException" use="literal"></soap:fault>
            </fault>
        </operation>

    </binding>

    <!-- SERVICE -->
    <service name="psicquicService">
        <port name="psicquic" binding="psq:psicquicSoapBinding">
            <soap:address location="http://localhost:9090/intact/psicquic-ws/search"></soap:address>
        </port>
    </service>
</definitions>