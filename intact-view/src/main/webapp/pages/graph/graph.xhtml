<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:p="http://primefaces.prime.com.tr/ui"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:schemaLocation="http://intact.ebi.ac.uk/miscel /WEB-INF/intact-miscel.tld">

<!-- TODO enhance the handling of the graph div size on screen resize -->
<!-- TODO Add on node click, a panel shows the details of a node, edge -->
<!-- TODO On right click on a node, allow to expand the network by updating the MIQL query (Q OR node.id) -->
<!-- TODO Add a way to run a text search by molecule name that highlights nodes -->
<!-- TODO Add a way to color highlight publications, detection methods, species -->
<!-- TODO Add a way to filter by confidence score with slider -->
<!-- TODO Add a way to filter nodes by count of neighbour -->
<!-- TODO Add a way to visualize graphicaly score or count of evidences -->
<!-- TODO Add a way to represent spoke expanded interactions (better wait MITAB 2.6) -->
<!-- TODO Need a URL to open the application on the graph tab, arams: serviceName, tab[graph/table]-->


<h:outputScript library="javascript/cytoscape_web" name="json2.min.js"/>
<h:outputScript library="javascript/cytoscape_web" name="AC_OETags.min.js"/>
<h:outputScript library="javascript/cytoscape_web" name="cytoscapeweb.min.js"/>
<h:panelGroup>
    <div id="rightPanel" style="float:right; width:24%;">

        <p:panel header="Open in Cytoscape">

           <h:panelGrid style="text-align:center;width:100%">
                <h:outputLink value="/intact/exportCytoscape?query=#{iamf:encodeURL(userQuery.solrQueryString)}&amp;format=xml_2_53">
                    <h:graphicImage url="/images/logos/cytoscape-icon.PNG" shortDesc="Click to start Cytoscape"/>
                </h:outputLink>
           </h:panelGrid>
           <div style="font-size:8.5pt;width:98%;">
                <h:outputText value="Click "/>
                <h:outputLink value="/intact/exportCytoscape?query=#{iamf:encodeURL(userQuery.solrQueryString)}&amp;format=xml_2_53">
                    &#160;here&#160;
                </h:outputLink>
                <h:outputText value=" or on the icon above to start Cytoscape." />

                <br/>
                <br/>

                <h:outputText value="This is going to open the current search in a WebStart " />

                <h:outputLink value="http://java.sun.com/javase/technologies/desktop/javawebstart/index.jsp" target="_blank">
                    <h:graphicImage url="/images/help.png" style="vertical-align: baseline;"/>
                </h:outputLink>

                <h:outputText value=" version of Cytoscape 2.6.3 " />

                <h:outputLink value="http://www.cytoscape.org/" target="_blank">
                    <h:graphicImage url="/images/help.png" style="vertical-align: baseline;"/>
                </h:outputLink>
            </div>
        </p:panel>
                <br/>

            <p:panel header="CytoscapeWeb Controls" style="width:98%;">
                <table>
                    <tr>
                        <td>
                            <h:outputText value="Layouts:"/>&#160;
                            <p:commandLink destination="#" onclick="selectForceDirectedLayout();"><h:outputText
                                    id="forceDirectedLayout" value="force directed"
                                    style="font-weight:bold"/></p:commandLink>
                            &#160;|&#160;
                            <p:commandLink destination="#" onclick="selectRadialLayout();"><h:outputText
                                    id="radialLayout" value="radial" style="font-weight:normal"/></p:commandLink>
                            &#160;|&#160;
                            <p:commandLink destination="#" onclick="selectCircleLayout();"><h:outputText
                                    id="circleLayout" value="circle" style="font-weight:normal"/></p:commandLink>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <h:outputText value="Merge edges:"/>&#160;
                            <p:commandLink destination="#" onclick="selectMerged();"><h:outputText id="mergeOn"
                                                                                                   value="on"
                                                                                                   style="font-weight:bold"/></p:commandLink>
                            &#160;|&#160;
                            <p:commandLink destination="#" onclick="unselectMerged();"><h:outputText id="mergeOff"
                                                                                                     value="off"
                                                                                                     style="font-weight:normal"/></p:commandLink>
                        </td>
                    </tr>
                </table>
            </p:panel>
        <br/>

        <div id="note" style="position:absolute;">
        </div>
    </div>

    <div id="cytoscapeweb" style="width:75%; height:900px; border:1px solid #d3d3d3;">
        Interaction Graph should show here in a few moments... <h:graphicImage url="/images/wait_black_indicator.gif" style="vertical-align: baseline;"/>
    </div>


</h:panelGroup>
<script type="text/javascript">
    //<![CDATA[
    var query = '#{searchBean.results.searchQuery.query}';
    var mitabUrl = 'http://www.ebi.ac.uk/Tools/webservices/psicquic/intact/webservices/current/search/query/' + query;
    var xmlUrl = '/intact/graphmlDownload?mitabUrl=' + mitabUrl;

    // wait for the data to be loaded prior, handy for larger network.
    var xml;
    // declare variable for interaction with cytoscapeWeb (will be inialized in drawGraph)
    var vis;
    jQuery.ajax({
        url: xmlUrl,
        success: function(gotXml) {
            xml = gotXml;
            drawGraph();
        },
        error: function() {
            var element = document.getElementById("cytoscapeweb");
            $(element).empty();
            $(element).append("An error occurred while loading the data.");
        }});

    // Enables the shapes present in the GraphML input to be displayed in the Flash panel.

    function drawGraph() {

        var options = {
            swfPath: "/intact/resources/swf/CytoscapeWeb",
            flashInstallerPath: "/intact/resources/swf/playerProductInstall"
        };

        // whether the edges should be merged or not
        var merged = true;

        // init and draw
        vis = new org.cytoscapeweb.Visualization("cytoscapeweb", options);

        // callback when Cytoscape Web has finished drawing
        vis.ready(function() {

            vis.edgesMerged(merged);

            vis.addContextMenuItem("Select first neighbours", "nodes",
                    function (evt) {
                        // Get the right-clicked node:
                        var rootNode = evt.target;

                        // Get the first neighbors of that node:
                        var fNeighbors = vis.firstNeighbors([rootNode]);
                        var neighborNodes = fNeighbors.neighbors;

                        // Select the root node and its neighbors:
                        vis.select([rootNode]).select(neighborNodes);
                    }
                    );

            // TODO in the node right click, link out to the service database using that molecule id
            // TODO edge > right click, link out to the service database using that interaction AC.

//            vis.addContextMenuItem("Link out to source web site", "nodes",
//                                  function (evt) {
//                                      // Get the right-clicked node:
//                                      var target = evt.target;
//
//                                      var identifier = target.data[ 'identifier' ];
//
//                                      // get url template
//                                      var url='http://www.google.com/q=${ac}}';
//
//                                      // open URL for that molecule
//                                      window.open(url.replace('${ac}}',identifier),'_blank',null);
//                                  }
//                    );

            vis.addContextMenuItem("Expand network around this molecule", "nodes",
                    function (evt) {
                        // Get the right-clicked node:
                        var target = evt.target;

                        var crossRef = target.data['identifier'].split('#');
                        var identifier = crossRef[1];

                        // update the search field
                        var searchQuery = document.getElementById('queryTxt').value;
                        var newQuery = '(' + searchQuery + ') OR id:' + identifier;
                        document.getElementById('queryTxt').value = newQuery;

                        // submit search
                        document.mainForm.quickSearchBtn.click();
                    }
                    );

            // add a listener for when nodes and edges are clicked
            vis.addListener("click", "nodes", function(event) {
                handle_node_click(event);
            });

            vis.addListener("click", "edges", function(event) {
                clear();
                handle_edge_click(event);
            });

            function handle_edge_click(event) {
                var target = event.target;

                clear();
                // print stuff here (eg. method, type, pmid, author, confidence value...).
            }

            function handle_node_click(event) {
                var target = event.target;

                clear();
                print('<p><b><u>Node Properties</u></b></p>');

                print('<b>Molecule type</b>: ' + target.data['type'] + '<br/>');
                print('<b>Interactor</b>: ' + target.data['label'] + '<br/>');
                var species = target.data['specie'];
                if (species != null) {
                    print('<b>Species</b>: ' + species + '<br/>');
                }

                var crossRef = target.data['identifier'].split('#');
                var link = null;
                var db = crossRef[0];
                if (db == 'uniprotkb') {
                    link = 'http://www.uniprot.org/uniprot/' + crossRef[1];
                } else if (db == 'chebi') {
                    link = 'http://www.ebi.ac.uk/chebi/searchId.do?chebiId=' + crossRef[1];
                }
                print('<b>Identifier</b>: ');
                if (link != null) {
                    print('<a href="' + link + '" target="_blank">' + crossRef[1] + '</a>');
                } else {
                    print(crossRef[1] + ' (' + crossRef[0] + ')' + '<br/>')
                }
            }

            function clear() {
                document.getElementById("note").innerHTML = "";
            }

            function print(msg) {
                document.getElementById("note").innerHTML += msg;
            }
        });

        var style = {
            nodes: {
                shape: { passthroughMapper: { attrName: "shape" } }
            }
        };

        var draw_options = {
            // set visual style
            visualStyle: style,

            // your data goes here
            network: xml
        };

        vis.draw(draw_options);

        graphResize();
    }
    // showhide('cytoscapeweb');
    //showhide('graphController');
    //]]>
</script>
</ui:composition>
