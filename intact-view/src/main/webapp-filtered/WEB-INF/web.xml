<?xml version = '1.0' encoding = 'ISO-8859-1'?>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or impliedor.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
-->
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
    http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         metadata-complete="true" version="3.0">

    <!-- DGI -->
    <context-param>
        <description>URL to the news, needed by the feed servlet</description>
        <param-name>uk.ac.ebi.faces.NEWS_URL</param-name>
        <param-value>${intact.news.url}</param-value>
    </context-param>

    <context-param>
        <description>
            Where to find the Dataset of the Month XML file
        </description>
        <param-name>uk.ac.ebi.intact.DATASET_OF_THE_MONTH_URL</param-name>
        <param-value>${intact.dotm.url}</param-value>
    </context-param>

    <!-- to avoid viewExpiredException-->
    <context-param>
        <param-name>com.sun.faces.enableRestoreView11Compatibility</param-name>
        <param-value>true</param-value>
    </context-param>

    <!-- MyFaces -->

    <context-param>
        <description>
            This affects the value of the Expires response header that will be sent for a resource.
        </description>
        <param-name>com.sun.faces.defaultResourceMaxAge</param-name>
        <param-value>1209600000</param-value>
    </context-param>

    <context-param>
        <description>State saving method: "client" or "server" (= default)
            See JSF Specification 2.5.3
        </description>
        <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
        <param-value>server</param-value>
    </context-param>

    <context-param>
        <param-name>org.apache.myfaces.annotation.SCAN_PACKAGES</param-name>
        <param-value>uk.ac.ebi.intact.view.webapp</param-value>
    </context-param>

    <context-param>
        <description>This parameter tells MyFaces if javascript code should be allowed in the
            rendered HTML output.
            If javascript is allowed, command_link anchors will have javascript code
            that submits the corresponding form.
            If javascript is not allowed, the state saving info and nested parameters
            will be added as url parameters.
            Default: "true"
        </description>
        <param-name>org.apache.myfaces.ALLOW_JAVASCRIPT</param-name>
        <param-value>true</param-value>
    </context-param>
    <context-param>
        <param-name>org.apache.myfaces.DETECT_JAVASCRIPT</param-name>
        <param-value>false</param-value>
    </context-param>
    <context-param>
        <description>If true, rendered HTML code will be formatted, so that it is "human readable".
            i.e. additional line separators and whitespace will be written, that do not
            influence the HTML code.
            Default: "true"
        </description>
        <param-name>org.apache.myfaces.PRETTY_HTML</param-name>
        <param-value>true</param-value>
    </context-param>
    <context-param>
        <description>If true, a javascript function will be rendered that is able to restore the
            former vertical scroll on every request. Convenient feature if you have pages
            with long lists and you do not want the browser page to always jump to the top
            if you trigger a link or button action that stays on the same page.
            Default: "false"
        </description>
        <param-name>org.apache.myfaces.AUTO_SCROLL</param-name>
        <param-value>true</param-value>
    </context-param>

    <context-param>
        <description>
            Validate managed beans, navigation rules and ensure that forms are not nested.
        </description>
        <param-name>org.apache.myfaces.VALIDATE</param-name>
        <param-value>true</param-value>
    </context-param>

    <context-param>
        <description>
            Whether to enable custom error handling or not
        </description>
        <param-name>org.apache.myfaces.ERROR_HANDLING</param-name>
        <param-value>true</param-value>
    </context-param>

    <context-param>
        <description>
            If you want to use a different resource template file than
            "META-INF/rsc/myfaces-dev-error.xml" this param let you configure
            it. (since 1.2.4-SNAPSHOT and 1.1.6-SNAPSHOT)
        </description>
        <param-name>org.apache.myfaces.ERROR_TEMPLATE_RESOURCE</param-name>
        <param-value>META-INF/ebi-dev-error.xml</param-value>
    </context-param>

    <context-param>
        <param-name>org.apache.myfaces.EXPRESSION_FACTORY</param-name>
        <param-value>com.sun.el.ExpressionFactoryImpl</param-value>
    </context-param>

    <!-- Spring resources -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath*:/META-INF/*.spring.xml,
            classpath:/META-INF/intact-view.spring.xml
        </param-value>
    </context-param>

    <!-- Use Documents Saved as *.xhtml -->
    <context-param>
        <param-name>javax.faces.DEFAULT_SUFFIX</param-name>
        <param-value>.xhtml</param-value>
    </context-param>

    <!-- Facelets -->
    <context-param>
        <param-name>facelets.SKIP_COMMENTS</param-name>
        <param-value>true</param-value>
    </context-param>

    <context-param>
        <param-name>facelets.LIBRARIES</param-name>
        <param-value>/WEB-INF/intactview.taglib.xml;
            /WEB-INF/intact-functions.taglib.xml;
            /WEB-INF/mitab-functions.taglib.xml;
            /WEB-INF/extlinks.taglib.xml;
            /WEB-INF/intact-miscel.taglib.xml;
            /WEB-INF/site-functions.taglib.xml;
        </param-value>
    </context-param>

    <!-- Indicate the encryption algorithm used for encrypt the view state. -->
    <context-param>
        <param-name>org.apache.myfaces.ALGORITHM</param-name>
        <!-- See http://java.sun.com/j2se/1.4.2/docs/guide/security/jce/JCERefGuide.html for details -->
        <param-value>AES</param-value>
    </context-param>

    <context-param>
        <param-name>org.apache.myfaces.USE_ENCRYPTION</param-name>
        <param-value>true</param-value>
    </context-param>

    <!-- Defines the default mode and padding used for the encryption algorithm -->
    <context-param>
        <param-name>org.apache.myfaces.ALGORITHM.PARAMETERS</param-name>
        <param-value>CBC/PKCS5Padding</param-value>
    </context-param>

    <!-- Defines the initialization vector (Base64 encoded) used for the
         encryption algorithm. Note its usage depends on the algorithm config used,
         that means it must be defined if CBC mode is used and could not if ECB mode is used -->
    <context-param>
        <param-name>org.apache.myfaces.ALGORITHM.IV</param-name>
        <param-value>NzY1NDMyMTA3NjU0MzIxMA==</param-value>
    </context-param>

    <!-- Indicate the algorithm used to calculate the Message Authentication Code that is added to the view state. -->
    <context-param>
        <param-name>org.apache.myfaces.MAC_ALGORITHM</param-name>
        <param-value>HmacSHA1</param-value>
    </context-param>

    <context-param>
        <description>Defines the secret (Base64 encoded) used to initialize the secret key
            for encryption algorithm. See MyFaces wiki/web site documentation
            for instructions on how to configure an application for
            different encryption strengths.
        </description>
        <param-name>org.apache.myfaces.SECRET</param-name>
        <param-value>OTM2NzM2MDY4YWx3OTNoag==</param-value>
    </context-param>

    <context-param>
        <description>Define the initialization code that are used to initialize the secret key used
            on the Message Authentication Code algorithm
        </description>
        <param-name>org.apache.myfaces.MAC_SECRET</param-name>
        <param-value>YWJjZDEyMzQ=</param-value>
    </context-param>

    <context-param>
        <param-name>org.apache.myfaces.SECRET.CACHE</param-name>
        <param-value>false</param-value>
    </context-param>

    <context-param>
        <param-name>org.apache.myfaces.MAC_SECRET.CACHE</param-name>
        <param-value>false</param-value>
    </context-param>

    <context-param>
        <param-name>org.apache.myfaces.CHECK_ID_PRODUCTION_MODE</param-name>
        <param-value>false</param-value>
    </context-param>

    <!-- orchestra param -->
    <context-param>
        <description>
            Controls whether two threads are prevented from accessing the same ConversationContext concurrently, or not.
            This is generally a bad idea as it can lead to ugly race conditions, so it is TRUE by default.

            It is possible for multiple requests associated with the same http session to be received concurrently. By
            default, a servlet engine simply processes all requests concurrently in different threads. However that can
            cause all sorts of unexpected problems with objects in scopes that are visible to both threads
            (session-scoped and conversation-scoped objects).

            When enabled, this option will block the thread for any request which will access the same Orchestra
            ConversationContext as a thread that is already running, and release it only when the earlier request has
            completed. This protects all orchestra conversation-scoped objects from concurrent access, but does not
            protect any session-scoped objects.

            When using Orchestra, it is recommended that session-scoped objects are avoided conversation-scoped beans
            used instead. If there is no session-scoped data in use by an application then it is safe to allow
            concurrent requests to the same http session. If you do wish to protect normal session-scoped objects as
            well, then the standard solution is to write a filter that uses standard java synchronisation on a
            session-scoped object, taking the lock on request entry and releasing it on request exit.

            Note that the expression "serialize requests" as used here means requests are processed serially, ie one
            after the other rather than concurrently. This has nothing to do with java.io.Serializable.
        </description>
        <param-name>org.apache.myfaces.orchestra.CoreConfig:SERIALIZE_REQUESTS</param-name>
        <param-value>true</param-value>
    </context-param>

    <!-- Primefaces params -->
    <context-param>
        <param-name>primefaces.THEME</param-name>
        <param-value>none</param-value>
    </context-param>

    <!-- for performance improvements-->
    <context-param>
        <param-name>
            org.ajax4jsf.xmlparser.ORDER
        </param-name>
        <param-value>
            NONE,NEKO,TIDY
        </param-value>
    </context-param>

    <context-param>
        <param-name>org.ajax4jsf.xmlparser.NEKO</param-name>
        <param-value>.*\..*</param-value>
    </context-param>

    <context-param>
        <param-name>
            org.ajax4jsf.COMPRESS_SCRIPT
        </param-name>
        <param-value>false</param-value>
    </context-param>
    <!--  Facelets tuning -->
    <context-param>
        <param-name>
            facelets.RECREATE_VALUE_EXPRESSION_ON_BUILD_BEFORE_RESTORE
        </param-name>
        <param-value>false</param-value>
    </context-param>

    <context-param>
        <param-name>
            facelets.BUILD_BEFORE_RESTORE
        </param-name>
        <param-value>false</param-value>
    </context-param>

    <context-param>
        <param-name>facelets.DEVELOPMENT</param-name>
        <param-value>false</param-value>
    </context-param>

    <context-param>
        <param-name>facelets.REFRESH_PERIOD</param-name>
        <param-value>-1</param-value>
    </context-param>

    <!--  JSF RI Performance tuning -->
    <context-param>
        <param-name>com.sun.faces.responseBufferSize</param-name>
        <param-value>500000</param-value>
    </context-param>

    <context-param>
        <param-name>com.sun.faces.verifyObjects</param-name>
        <param-value>false</param-value>
    </context-param>

    <!-- Allows the JavaScript to be cached -->
    <context-param>
        <param-name>
            com.sun.faces.externalizeJavaScript
        </param-name>
        <param-value>true</param-value>
    </context-param>

    <!-- Orchestra Filter -->
    <filter>
        <filter-name>orchestraFilter</filter-name>
        <filter-class>org.apache.myfaces.orchestra.filter.OrchestraServletFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>orchestraFilter</filter-name>
        <servlet-name>Faces Servlet</servlet-name>
    </filter-mapping>

    <!-- compress pages -->
    <filter>
        <filter-name>GzipFilter</filter-name>
        <filter-class>org.mortbay.servlet.GzipFilter</filter-class>
        <init-param>
            <param-name>mimeTypes</param-name>
            <param-value>text/html,text/plain,text/xml,application/xhtml+xml,text/css,application/javascript,image/svg+xml</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>GzipFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- PretyFaces -->
    <filter>
        <filter-name>Pretty Filter</filter-name>
        <filter-class>com.ocpsoft.pretty.PrettyFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>Pretty Filter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>


    <!-- Session expired - view expired -->
    <filter>
        <filter-name>sessionExpiredFilter</filter-name>
        <filter-class>uk.ac.ebi.intact.view.webapp.filter.SessionExpiredFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>sessionExpiredFilter</filter-name>
        <servlet-name>Faces Servlet</servlet-name>
    </filter-mapping>

    <filter>
        <filter-name>HealthFilter</filter-name>
        <filter-class>uk.ac.ebi.intact.view.webapp.filter.HealthFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>HealthFilter</filter-name>
        <url-pattern>/test</url-pattern>
    </filter-mapping>

    <!-- Spring Framework -->
    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>

    <!-- Orchestra stuff -->
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.apache.myfaces.orchestra.conversation.servlet.ConversationManagerSessionListener
        </listener-class>
    </listener>

    <!-- Faces Servlet -->
    <servlet>
        <servlet-name>Faces Servlet</servlet-name>
        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.xhtml</url-pattern>
    </servlet-mapping>

    <!-- News feed -->
    <servlet>
        <servlet-name>feed</servlet-name>
        <servlet-class>uk.ac.ebi.intact.view.webapp.servlet.NewsFeedServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>feed</servlet-name>
        <url-pattern>/feed</url-pattern>
    </servlet-mapping>

    <!-- Redirection servlet, for legacy inbound traffic -->
    <servlet>
        <servlet-name>legacyRedirection</servlet-name>
        <servlet-class>uk.ac.ebi.intact.view.webapp.servlet.LegacyRedirectionServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>legacyRedirection</servlet-name>
        <url-pattern>/site/*</url-pattern>
        <url-pattern>/binary-search/*</url-pattern>
        <url-pattern>/search/*</url-pattern>
    </servlet-mapping>

    <!-- DAS Proxy Servlet -->
    <servlet>
        <servlet-name>das</servlet-name>
        <servlet-class>uk.ac.ebi.intact.view.webapp.servlet.das.DasProxyServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>das</servlet-name>
        <url-pattern>*.dasProxy</url-pattern>
    </servlet-mapping>

    <!-- Export Servlet -->
    <servlet>
        <servlet-name>export</servlet-name>
        <servlet-class>uk.ac.ebi.intact.view.webapp.servlet.ExportServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>export</servlet-name>
        <url-pattern>/export</url-pattern>
    </servlet-mapping>

    <!-- Health check Servlet -->
    <servlet>
        <servlet-name>health</servlet-name>
        <servlet-class>uk.ac.ebi.intact.view.webapp.servlet.HealthCheckServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>health</servlet-name>
        <url-pattern>/test</url-pattern>
    </servlet-mapping>

    <!-- Table Header Servlet -->
    <servlet>
        <servlet-name>tableHeader</servlet-name>
        <servlet-class>uk.ac.ebi.intact.view.webapp.servlet.TableHeaderServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>tableHeader</servlet-name>
        <url-pattern>/tableHeader</url-pattern>
    </servlet-mapping>

    <!-- JSON Exporter Servlet -->
    <servlet>
        <servlet-name>jsonExport</servlet-name>
        <servlet-class>uk.ac.ebi.intact.view.webapp.servlet.JsonExporter</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>jsonExport</servlet-name>
        <url-pattern>/json</url-pattern>
    </servlet-mapping>

    <!-- Proxy Servlet -->
    <servlet>
        <servlet-name>proxy</servlet-name>
        <servlet-class>uk.ac.ebi.intact.view.webapp.servlet.Proxy</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>proxy</servlet-name>
        <url-pattern>/proxy</url-pattern>
    </servlet-mapping>

    <!-- Cytoscape Servlet -->
    <servlet>
        <servlet-name>exportCytoscape</servlet-name>
        <servlet-class>uk.ac.ebi.intact.view.webapp.servlet.cytoscape.CytoscapeServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>exportCytoscape</servlet-name>
        <url-pattern>/exportCytoscape</url-pattern>
    </servlet-mapping>

    <!-- GraphML Servlet-->
    <servlet>
        <servlet-name>graphmlDownload</servlet-name>
        <servlet-class>uk.ac.ebi.intact.view.webapp.servlet.cytoscape.GraphmlServlet</servlet-class>
    </servlet>

    <!-- Faces Servlet Mappings -->
    <servlet-mapping>
        <servlet-name>graphmlDownload</servlet-name>
        <url-pattern>/graphmlDownload</url-pattern>
    </servlet-mapping>

    <!-- Welcome files -->
    <welcome-file-list>
        <welcome-file>/index.jsp</welcome-file>
    </welcome-file-list>

    <session-config>
        <session-timeout>60</session-timeout>
    </session-config>

    <!-- Handling of the HTTP error 404(Not found) and 500(internal server error)-->
    <error-page>
        <error-code>404</error-code>
        <location>/error/404.xhtml</location>
    </error-page>

    <error-page>
        <error-code>500</error-code>
        <location>/error/500.xhtml</location>
    </error-page>

    <error-page>
        <exception-type>javax.faces.application.ViewExpiredException</exception-type>
        <location>/main.xhtml?status=exp</location>
    </error-page>

    <resource-env-ref>
        <resource-env-ref-name>${db.jndi}</resource-env-ref-name>
        <resource-env-ref-type>
            javax.sql.DataSource
        </resource-env-ref-type>
    </resource-env-ref>

</web-app>
